@if (Request.IsAuthenticated) {
    <text>
        <ul class="nav pull-right">            
            <li>
                <div class="navbar-text">@User.Identity.Name</div> 
            </li>
            <li>
            @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-form", style = "margin-left: 8px" })) {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-inverse" id="logInBtn" data-placement="left" title="Log off."><i class="icon-off icon-white"></i></button>
            }
            </li>
        </ul>
    </text>
} else {
    using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "navbar-form form-inline pull-right" }))
    {
        
        @Html.AntiForgeryToken()
        <label class="checkbox"><input name="rememberMe" type="checkbox" value="true" /><input name="rememberMe" type="hidden" value="false" /> Remember me</label>    
        <button type="submit" class="btn btn-inverse" id="logInBtn" style="margin-left: 5px" name="provider" value="@OAuthWebSecurity.RegisteredClientData.First().AuthenticationClient.ProviderName" 
            data-placement="bottom" title="Log in with Google.">Log in with Google</button>
         
    }
}

@{ /* @Html.ActionLink(User.Identity.Name, "Manage", "Account", routeValues: null, htmlAttributes: new { @class = "navbar-link", title = "Manage" })           
    * Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "navbar-link" })
            @Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class = "navbar-link" }) */ }